name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      packer_versions: ${{ steps.build_versions.outputs.value }}
    steps:
      - name: Download and install hub-tool
        run: |
          wget https://github.com/docker/hub-tool/releases/download/v0.4.5/hub-tool-linux-amd64.tar.gz
          tar xf hub-tool-linux-amd64.tar.gz
          mv hub-tool hub-tool-dist
          mv hub-tool-dist/hub-tool ./
          find / -name expect
      - name: Log in to Docker Hub
        shell: expect
        run: |
          spawn ./hub-tool login andych
          expect "Password:"
          send "${{ secrets.DOCKERHUB_TOKEN }}\n"
          interact
      - name: Get a list of Hashicorp Packer versions
        id: hashicorp_versions
        run: echo "value=$(./hub-tool tag ls --all --format json hashicorp/packer)" >> "${GITHUB_OUTPUT}"
      - name: Get a list of my packer-ansible versions
        id: my_versions
        run: echo "value=$(./hub-tool tag ls --all --format json andych/packer-ansible)" >> "${GITHUB_OUTPUT}"
      - name: Evaluate packer versions to build
        id: build_versions
        shell: python
        run: |
          import os
          import json
          hashicorp_versions = '''${{ steps.hashicorp_versions.outputs.value }}'''
          my_versions = '''${{ steps.my_versions.outputs.value }}'''
          hashicorp_versions = json.loads(hashicorp_versions)
          my_versions = json.loads(my_versions)
          hashicorp_versions = set([version['Name'].split(':')[1] for version in hashicorp_versions])
          my_versions = set([version['Name'].split(':')[1] for version in my_versions])
          build_versions = list(hashicorp_versions - my_versions)
          with open(os.environ['GITHUB_OUTPUT'], 'a') as fo:
              json.dump(build_versions, fo)
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        packer_version: ${{ fromJson(needs.setup.outputs.packer_versions) }}
    steps:
    - uses: actions/checkout@v3
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: andych
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set up QEMU for multi-platform Docker build
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx for multi-platform Docker build
      uses: docker/setup-buildx-action@v2
    - name: Build and push the Docker image
      uses: docker/build-push-action@v4
      with:
        push: true
        tags: andych/packer-ansible:${{ matrix.packer_version }}
        build-args: |
          packer_version=${{ matrix.packer_version }}
        platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm64
